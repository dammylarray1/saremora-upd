#!/bin/bash

# Initialize a list of tasks with their statuses
declare -A tasks
tasks=(
    ["Task1"]="Completed"
    ["Task2"]="Running"
    ["Task3"]="NotStarted"
    ["Task4"]="Completed"
)

# Initialize the all_completed flag to false
all_completed=false

# Start a while loop to check the status of all tasks
while [ "$all_completed" = false ]; do
    echo "Checking task statuses..."
    
    # Assume all tasks are completed initially
    all_completed=true

    # Iterate through each task in the list
    for task in "${!tasks[@]}"; do
        status=${tasks[$task]}
        echo "Task: $task, Status: $status"
        
        if [ "$status" = "Completed" ]; then
            echo "$task has been completed."
        elif [ "$status" = "Running" ]; then
            echo "$task is still running."
            all_completed=false
        else
            echo "$task has not started yet."
            all_completed=false
        fi
    done

    # If not all tasks are completed, wait and then recheck
    if [ "$all_completed" = false ]; then
        echo "Not all tasks are completed. Checking again in 5 seconds..."
        sleep 5

        # Simulate the task progression in the next iteration
        # (You can modify this logic for your testing)
        for task in "${!tasks[@]}"; do
            if [ "${tasks[$task]}" = "Running" ]; then
                tasks[$task]="Completed"
            elif [ "${tasks[$task]}" = "NotStarted" ]; then
                tasks[$task]="Running"
            fi
        done
    fi
done

# Final message when all tasks are completed
echo "All tasks have been completed!"
